2version: '3.1'

container_name: my-container

services:
  web:
    build: ./web
    ports:
      - 8080:8080
    environment:
      NODE_ENV: 'development'
      API_HOST: "api:5000"
      PORT: 8080
    links:
      - api
    deploy:
        mode: replicated
        replicas: 3
        update_config:
            parallelism: 3
            delay: 10s
        restart_policy:
            condition: on-failure
        endpoint_mode: vip
        placement:
            constraints:
                - node.role == worker

  api:
    build: ./api+
    links:
      - database
    environment:
      NODE_ENV: 'development'
      DB: "postgres://admin:admin@database/api"
      PORT: 5000
    deploy:
        mode: replicated
        replicas: 3
        update_config:
            parallelism: 3
            delay: 10s
        restart_policy:
            condition: on-failure
        placement:
            constraints:
                - node.role == worker
        
    depends_on:
        postgres-database:
            condition: service_healthy

  database:
    image: postgres:9.6
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: api
    deploy:
        update_config:
            failure_action: rollback
        restart_policy:
            condition: on-failure
        placement:
            constraints:
                - node.role == worker
    healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 30s
        timeout: 30s
        retries: 3
